/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    全体 / 共通クラス
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

html {
    font-size: 100%;
  }
  body {
    color: #333;
    font-family: "游ゴシック体", "YuGothic", "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック", "Yu Gothic", "メイリオ", sans-serif;
    letter-spacing: 0.1em;
  }
  a {
    color: #333;
    text-decoration: none;
  }
  img {
    max-width: 100%;
    vertical-align: bottom;
  }
  li {
    list-style: none;
  }
  /*
  コンテンツ幅を設定するための共通クラス
  */
  .wrapper {
    width: 100%;
    max-width: 860px;
    margin: 0 auto;
  }
  /*
  セクションタイトル用の共通クラス
  */
  .section-title {
    font-size: 2.25rem;
    margin-bottom: 100px;
    text-align: center;
    position: relative;
  }
  /* 疑似要素でタイトル下に下線を引く */
.section-title::after {
    content: "";
    width: 100px;
    height: 3px;
    background-color: #333;
    display: block;
    position: absolute;
    bottom: -20px;
    left: 0;
    right: 0;
    margin: 0 auto;
  }

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    header
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

header {
    height: 100px;
    padding: 40px 0 0 50px;
}
header .site-title {
    width: 100px;
    line-height: 1;
}
header .site-title a {
    display: block;
}

/* ーーーーーーーーーーー
    ハンバーガ―メニュー
ーーーーーーーーーーーーー */

/* スクロールしても位置固定するために position:fixedを使用しtopとrightで位置指定。z-indexで最上層レイヤーにする */
.hamburger {
    width: 100px;
    height: 100px;
    background-color: #676363;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 30;
    cursor: pointer;
    transition: 0.3s;
}
.hamburger:hover {
    opacity: 0.7;
}

/* ハンバーガーメニューの線の設定（メニューが閉じている時） */
/* イーズインアウトで加速してから減速。 */
.hamburger span {
    width: 50px;
    height: 2px;
    background-color: #fff;
    position: absolute;
    left: 25px;
    transition: 0.3s ease-in-out
}
/* 1本目の線の位置を設定 */
.hamburger span:nth-child(1) {
    top: 36px;
}
/* 2本目の線の位置を設定 */
.hamburger span:nth-child(2) {
    top: 50px;
}
/* 3本目の線の位置を設定 */
.hamburger span:nth-child(3) {
    top: 64px;
} 
/* ハンバーガーメニューの線の設定（ナビメニューが開いている時のバッテン） */
/* 1本目の線を-45度回転 */
.hamburger.active span:nth-child(1) {
    top: 47px;
    left: 25px;
    background-color: #fff;
    transform: rotate(-45deg);
}
/* 2本目と3本目は重ねて45度回転 */
.hamburger.active span:nth-child(2),
.hamburger.active span:nth-child(3) {
    top: 47px;
    background-color: #fff;
    transform: rotate(45deg);
}
/* メニューの設定 */
/* 最初は閉じている状態なので、opacity:0 visibility:hiddenで要素を非表示にしておく */
/* visibility 要素の可視・不可視を切替え。不可視になるだけでなく、アクセシビリティツリーから削除されてスクリーンセーバーから読み上げられず、タフフォーカスも当たらなくなる */
#navi {
    width: 100%;
    height: 100vh;
    background-color: #676363;
    color: #fff;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 20;
    opacity: 0;
    text-align: center;
    transition: opacity 0.6s ease, visibility 0.6s ease;
    visibility: hidden;
}

/* ハンバーガーメニューがクリックされた際に、jQueryで#naviにactiveクラスを追加して、メニューを表示させる。 */
/* visibleで要素が可視状態にする */
#navi.active {
    opacity: 1;
    visibility: visible;
}
/* ナビが開いた時に表示されているロゴの位置を設定 */
#navi .logo {
    width: 100px;
    position: absolute;
    top: 40px;
    left: 50px;
}
/* ナビのul */
#navi .menu {
    margin: 80px 0 40px 0;
}
#navi .menu li {
    margin-bottom: 20px;
}
#navi .menu a {
    color: #fff;
    font-weight: bold;
}
#navi .btn {
    width: 250px;
    border: solid 1px #fff;
    color: #fff;
    display: block;
    font-weight: bold;
    padding: 15px 0;
    margin: 0 auto;
    position: relative;
    transition: 0.3s ease-in-out;
}
/* ボタンの右と下の線は疑似要素で設定 */
#navi .btn::after {
    content:"";
    width: 250px;
    border-right: solid 1px #fff;
    border-bottom: solid 1px #fff;
    padding: 15px 0;

    position: absolute;

    right: -6px;
    bottom: -6px;
}
#navi .btn:hover {
    background-color: #fff;
    color: #676363;
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Mainvisual
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

#mainvisual {
    height: 720px;
    position: relative;
    margin-bottom: 120px;
}
/* positionを使用して、テキストとボタンが画像の上に重なるように配置。
　テキストとボタンが画像の上に表示されるように「z-index」を設定 */
#mainvisual .text {
    position: absolute;
    top: 280px;
    left: 10%;
    z-index: 10;
}
/* text-shadowで文字の輪郭に白い影をつけることで、文字が背景画像に埋もれないようにする
   水平方向の位置 垂直方向の位置 ぼかしの長さ 色  0.875rem=14px*/
#mainvisual .text .title {
    font-size: 2.875rem;
    font-weight: bold;
    margin-bottom: 30px;
    text-shadow: 0 4px 6px #fff;
}
/* 文字の下に影をつけてボタンに立体感を出す 1.5rem=24px */
#mainvisual .text .btn {
    background-color: #676363;
    border-bottom: 6px solid #595555;
    border-radius: 10px;
    color: #fff;
    font-size: 1.5rem;
    display: block;
    padding: 15px 35px;
    text-align: center;
    position: relative;
}
/* ボタンの右矢印 上と右にボーダーを設定し、transform:rotate(45deg)で45度回転させることで矢印を作成 */
/* positionで位置を調整する */
#mainvisual .text .btn::after {
    content: "";
    width: 16px;
    height: 16px;
    border-top: solid 3px #fff;
    border-right: solid 3px #fff;
    transform: rotate(45deg);
    position: absolute;
    top: 26px;
    right: 30px;
}
/* ホバー時は、opacityで透過させながらtransform:scale(1.05)で、ボタンを少しだけ大きくする */
#mainvisual .text .btn:hover {
    opacity: 0.9;
    transform: scale(1.05);
}

/* フェードイン、フェードアウトは keyframes で opacity を0から1に変化させることで表現し、 */
/* 2枚目以降のアニメーション開始タイミングをずらすことで3枚の画像が時間差で切り替わるように設定 */
/* 画像のフェード切り替え animationを使用して、画像をフェードイン、フェードアウトで切り替える */
/* 最初は3枚の画像を非表示にしておく */
/* アニメーションを実行
  fade    ：下で定義している「@keyframes fade」を実行
  15s     ：「@keyframes fade」の処理を15秒かけて実行
  infinite：アニメーションの処理を無限に繰り返す */
#mainvisual .fade li {
    width: 75%;
    position: absolute;
    top: 0;
    right: 0;
    opacity: 0;
    animation: fade 15s infinite;
}

/* 1枚目の画像のアニメーション実行タイミングを設定　0sですぐに実行 */
#mainvisual .fade li:nth-child(1) {
    animation-delay: 0s;
}
/* 2枚目の画像のアニメーション実行タイミングを設定 5秒後に実行 */
#mainvisual .fade li:nth-child(2) {
    animation-delay: 5s;
}
/* 3枚目の画像のアニメーション実行タイミングを設定 10秒後に実行 */
#mainvisual .fade li:nth-child(3) {
    animation-delay: 10s;
}
#mainvisual .fade li img {
    width: 100%;
    height: 720px;
    object-fit: cover;
}
/* box-shadowで画像のまわりをぼかす 
　　insetで要素に対してシャドウを内側に適用　水平 垂直 ぼかしの具合 ぼかしの広がり 色（色+透明度） */
#mainvisual .fade li::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    box-shadow: inset 0px 0px 20px 20px #fff;
}

/* アニメーション処理。上のanimationで15sを指定したので下記処理を15秒かけて実行。
0%が0秒を表し、100%が15秒後を表す。
0%のopacity:0で非表示の状態からスタートし、
15% になるまでの間に少しづつ画像を表示（フェードイン）させる。そこから
30% の時点までは画像を表示させたままの状態を維持し、
45% の時点に向けて画像を非表示（フェードアウト）する。
そこから100%まで非表示の状態を維持する。 */
@keyframes fade {
    0% {
        opacity: 0;
    }
    15% {
        opacity: 1;
    }
    30% {
        opacity: 1;
    }
    45% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Reason
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

#reason {
    margin-bottom: 120px;
}
#reason .bg {
    background-color:  #676363;
    padding: 80px 0;
}
/* スライド左右共通   最初はopacity:0で非表示にしておく */
#reason .slide {
    width: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #fff;
    padding: 5%;
    opacity: 0;
}
#reason .slide img {
    width: auto;
    height: 60px;
    margin-right: 30px;
    z-index: 30;
}
/* 1.75rem =12px */
#reason .slide .title {
    color: #676363;
    display: block;
    font-size: 1.75rem;
    font-weight: bold;
}
/* 1.125rem =18px */
#reason .slide .text {
    display: block;
    font-size: 1.125rem;
}
/* 左側のslideは右上と右下に丸みをつける */
#reason .slide-left {
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;
    margin-bottom: 40px;
}

/* アニメーション（スライド左）を実行 */
/* slide-left：下で定義している「@keyframes slide-left」を実行
0.5s    ：アニメーション開始〜終了までの時間（0.5sかけて実行）
ease-out：変化（開始時は早く、終了時は緩やかに変化）
0s      ：始まるまでの時間（0sですぐに実行）
1       ：繰り返し回数（1回）
forwards：終了時の状態をそのまま維持 */
#reason .slide-left {
    animation: slide-left 0.5s ease-out 0s 1 forwards;
  }

/* アニメーション処理 */
/* 最初はtranslateX(-50%)で左側に隠しておく */
/* 100%（0.5秒）かけて要素を表示させながら元の位置へ移動させる */
@keyframes slide-left {
  0% {
    transform: translateX(-50%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 右のslideは左上と左下に丸みをつける */
#reason .inview-slide-right {
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;
}

/* アニメーション（スライド右）を実行 　左の処理と同様*/
#reason .slide-right {
    animation: slide-right 0.5s ease-out 0s 1 forwards;
  }
  @keyframes slide-right {
    0% {
      transform: translateX(150%);
    }
    100% {
      opacity: 1;
      transform: translateX(100%);
    }
  }

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Voice
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

#voice {
    margin-bottom: 120px;
}
/* 初めは透明にしておく */
#voice .item-left,
#voice .item-right {
    display: flex;
    align-items: start;
    opacity: 1;
    margin-bottom: 60px;
}
#voice .item-left {
    justify-content: flex-start;
}
#voice .item-left:last-of-type {
    margin-bottom: 0;
}
#voice .item-right {
    justify-content: flex-end;
}
#voice .student img {
    width: 120px;
    background-color: #ccc;
    border-radius: 50%;
    margin-bottom: 10px;
}
#voice .student .name {
    font-size: 0.75rem;
    text-align: center;
}
/* ふきだしを設定 */
#voice .item-left .balloon-text,
#voice .item-right .balloon-text {
    width: 60%;
    display: flex;
    justify-content: center;
    background: #e9f1fb;
    border-radius: 15px;
    padding: 20px;
    position: relative;
}
#voice .item-left .balloon-text {
    margin-left: 25px;
}

/* 左のふきだしの矢印部分を設定 borderで三角形を作るために右以外のボーダーを透明にする */
#voice .item-left .balloon-text::before {
    content: "";
    position: absolute;
    top: 60%;
    left: 0;
    margin-left: -30px;
    border: 15px solid transparent;
    border-right: 15px solid #e9f1fb;
}
#voice .item-right .balloon-text {
    margin-right: 25px;
}

/* 右のふきだしの矢印部分を設定  borderで三角形を作るために左以外のボーダーを透明にする*/
#voice .item-right .balloon-text::before {
    content: "";
    position: absolute;
    top: 60%;
    right: 0;
    margin-right: -30px;
    border: 15px solid transparent;
    border-left: 15px solid #e9f1fb;
}
/* アニメーションを実行 
balloon ：下で定義している「@keyframes balloon」を実行
0.5s    ：始まってから終わるまでの時間（0.5sかけて実行）
ease-out：変化（開始時は早く、終了時は緩やかに変化）
0s      ：始まるまでの時間（0sですぐに実行）
1       ：繰り返し回数（1回）
forwards：終了時の状態をそのまま維持 */
#voice .balloon {
    animation: balloon 0.5s ease-out 0s 1 forwards;
}

/* アニメーション処理 */
/* 最初はtransform:scale(0.1)で要素を小さくした状態で、opacity: 0;で非表示にしておく
0.5秒かけて要素を表示させながら元のサイズへ戻す */
@keyframes balloon {
    0% {
        transform: scale(0.1);
        opacity: 0;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Summary
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

/* アニメーションを実行 
fall    ：下で定義している「@keyframes fall」を実行
10s     ：始まってから終わるまでの時間（10sかけて実行）
infinite：の繰り返し回数(無限に繰り返す)
linear  ：変化（開始から終了まで一定に変化） */
#summary {
    background: url("https://code-jump.com/demo/html/lp/img/bg.gif") repeat;
    animation: fall 10s infinite linear;
    padding: 60px 0;
    margin-bottom: 120px;
}

/* アニメーション処理
10秒かけて背景画像の位置「background-position」を移動させる動作を繰り返す */
@keyframes fall {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: -700px 700px;
    }
}

#summary .menu {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
#summary .menu li {
    width: 48%;
    background-color: #fff;
    border-radius: 20px;
    padding: 60px;
    margin-bottom: 32px;
}
/* 3つ目以降はmargin-bottomを設定しない */
#summary .menu li:nth-child(n + 3) {
    margin-bottom: 0;
}
#summary .menu-title {
    font-weight: bold;
    line-height: 1;
    text-align: center;
}
/* 1.75rem =28px */
#summary .menu-title .ja {
    display: block;
    font-size: 1.75rem;
    margin-bottom: 15px;
}
/* 1.125rem =18px */
#summary .menu-title .en {
    display: block;
    font-size: 1.125rem;
    margin-bottom: 30px;
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Entry
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

#entry {
    margin-bottom: 120px;
    text-align: center;
}
#entry .title {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 5px;
}
/* 1.125rem =18px */
#entry .catchphrase {
    font-size: 1.125rem;
    margin-bottom: 40px;
}
#entry .btn {
    background-color: #676363;
    border-radius: 40px;
    border: solid 3px #676363;
    color: #fff;
    font-size: 1.75rem;
    font-weight: bold;
    display: block;
    padding: 15px;
    text-align: center;
    transition: 0.3s;
}
#entry .btn:hover {
    background-color: #fff;
    border: solid 3px #676363;
    color: #676363;
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    footer
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

footer {
    background-color: #e8e8e8;
    padding: 60px 0 20px 0;
}
/* ホバー時の透過をふわっとさせる（0.3秒かけて実行） */
footer a {
    font-size: 0.875rem;
    transition: 0.3s;
}
footer a:hover {
    opacity: 0.7;
}
footer .inner {
    display: flex;
    justify-content: space-between;
    margin-bottom: 60px;
}
footer .inner >li {
    width: 25%;
}
footer .inner .title {
    font-weight: bold;
}
/* ul */
footer .inner .menu li {
    margin-bottom: 3px;
}
/* 0.625rem =10px */
footer .copyright {
    font-size: 0.625rem;
    text-align: center;
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    SP　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

@media screen and (max-width: 900px) {
    .wrapper {
        padding: 0 16px;
    }
    .section-title {
        font-size: 1.75rem;
        margin-bottom: 60px;
    }
    .section-title::after {
        width: 80px;
    }
    /* ーーーーーーーーーーーーーーーーーー
        header　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    header {
        padding: 25px 0 0 25px;
    }
     /* ハンバーガ―メニュー */
    .hamburger {
        width: 75px;
        height: 75px;
    }
    .hamburger span {
        width: 35px;
        left: 21px;
    }
    .hamburger span:nth-child(1) {
        top: 26px;
    }
    .hamburger span:nth-child(2) {
        top: 37px;
    }
    .hamburger span:nth-child(3) {
        top: 48px;
    }
    .hamburger.active span:nth-child(1) {
        top: 37px;
        left: 21px;
    }
    .hamburger.active span:nth-child(2),
    .hamburger.active span:nth-child(3) {
        top: 37px;
    }
    /* ナビを開いた時のロゴ */
    #navi .logo {
        top: 25px;
        left: 25px;
        width: 100px;
    }
    #navi .menu {
        margin-top: 110px;
    } 
    /* ーーーーーーーーーーーーーーーーーー
        Mainvisual　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    #mainvisual {
        height: 490px;
        margin-bottom: 80px;
    }
    #mainvisual .fade li {
        width: 100%;
    }
    #mainvisual .fade li img {
        height: 300px;
    }
    /* 両端に16pxづつ余白を作る 幅いっぱい（100%）から、32pxの固定幅を引いた数値を指定*/
    #mainvisual .text {
        width: calc(100% - 32px);
        top: 310px;
        left: 16px;
    }
    #mainvisual .text .title {
        font-size: 1.75rem;
        margin-bottom: 10px;
    }
    #mainvisual .text .btn {
        width: 100%;
    }
    /* ーーーーーーーーーーーーーーーーーー
        Reason　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    #reason {
        margin-bottom: 80px;
    }
    #reason .bg {
        margin: 40px 0;
    }
    /* 幅いっぱい（100%）から、spレイアウトの.wrapperで付けた「左右padding16px」の固定幅を引いた数値を指定 */
    #reason .slide {
        width: calc(100% - 16px);
    }
    /* 1.5rem =24px */
    #reason .slide .title {
        font-size: 1.5rem;
    }

    @keyframes slide-left {
        0% {
            transform: translateX(-100%);
        }
        100% {
            opacity: 1;
            transform: translateX(0);
        }
    } 
    /* spレイアウトで.wrapperで左右padding16pxを当てている。
    .slide-rightは左端にその分の16pxの余白を設けている。そのためアニメーション終了地点は16pxと指定 */
    @keyframes slide-right {
        0% {
            transform: translateX(100%);
        }
        100% {
            opacity: 1;
            transform: translate(16px);
        }
    }
    /* ーーーーーーーーーーーーーーーーーー
        Voice　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    #voice {
        margin-bottom: 80px;
    }
    #voice .student {
        text-align: center;
    }
    #voice .item-left,
    #voice .item-right {
        margin-bottom: 40px;
    }
    #voice .item-left {
        flex-direction: column-reverse;
        align-items: center;
    }
    #voice .item-right {
        flex-direction: column;
        align-items: center;
    }
    #voice .item-left .balloon-text,
    #voice .item-right .balloon-text {
        width: 100%;
        margin: 0 0 30px 0;
    }
    /* スマホの場合はふきだしの向きを下に変える */
    #voice .item-left .balloon-text::before,
    #voice .item-right .balloon-text::before {
        top: 100%;
        border: solid 15px transparent;
        border-top: 15px solid #e9f1fb
    } 
    /*左右に同量のマージンを当てることで、 下向き三角の位置を「吹き出しの中央部（50％の位置）」に設定する。
    三角部分の量はborder15px */
    #voice .item-left .balloon-text::before {
        margin-left: calc(50% - 15px);
    }
    #voice .item-right .balloon-text::before {
        margin-right: calc(50% - 15px);
    }
    /* ーーーーーーーーーーーーーーーーーー
        Summary　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    #summary {
        margin-bottom: 80px;
    }
    #summary .menu {
        flex-direction: column;
    }
    #summary .menu li {
        width: 100%;
        padding: 30px;
    }
    /* PCでは3つ目以降はmargin-bottomゼロに指定していたので、SPではmargin-bottomを設定する */
    #summary .menu li:nth-child(3) {
        margin-bottom: 32px;
    }
    /* 1.5rem =24px */
    #summary .menu-title .ja {
        font-size: 1.5rem;
    }
    #summary .menu-title .en {
        font-size: 1rem;
    }
    /* ーーーーーーーーーーーーーーーーーー
        Entry　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    #entry {
        margin-bottom: 80px;
    }
    #entry .title {
        font-size: 1.5rem;
    }
    #entry .catchphrase {
        font-size: 1rem;
    }
    #entry .btn{
        font-size: 1.5rem;
    }
    /* ーーーーーーーーーーーーーーーーーー
        footer　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
    ーーーーーーーーーーーーーーーーーーー */
    /* pcでは４列表示であったのをSPでは２列にする */
    footer .inner {
        flex-wrap: wrap;
    }
    footer a {
        font-size: 0.75rem;
    }
    footer .inner .title {
        font-size: 0.9375rem;
    }
    footer .inner > li {
        width: 50%;
    }
    /* ２列にした時に上段（１行目）となる1つ目＆2つ目にマージンボトムを設定 */
    footer .inner > li:nth-child(1),
    footer .inner > li:nth-child(2) {
        margin-bottom: 30px;
    } 
}